{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np \n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from keras.preprocessing.text import Tokenizer\n",
    "from keras.preprocessing.sequence import pad_sequences\n",
    "from keras.models import Sequential\n",
    "from keras.layers import Dense, Embedding, Conv1D, GlobalMaxPooling1D, Bidirectional, LSTM\n",
    "from sklearn.model_selection import train_test_split\n",
    "from keras.utils.np_utils import to_categorical\n",
    "from keras.callbacks import EarlyStopping\n",
    "from keras.layers import Dropout\n",
    "import re\n",
    "from nltk.corpus import stopwords\n",
    "from nltk import word_tokenize\n",
    "STOPWORDS = set(stopwords.words('english'))\n",
    "from sklearn.cluster import DBSCAN\n",
    "from sklearn.preprocessing import StandardScaler"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_csv('/home/keyless/Downloads/labeled_data.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>count</th>\n",
       "      <th>hate_speech</th>\n",
       "      <th>offensive_language</th>\n",
       "      <th>neither</th>\n",
       "      <th>class</th>\n",
       "      <th>tweet</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>!!! RT @mayasolovely: As a woman you shouldn't...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>!!!!! RT @mleew17: boy dats cold...tyga dwn ba...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>!!!!!!! RT @UrKindOfBrand Dawg!!!! RT @80sbaby...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>!!!!!!!!! RT @C_G_Anderson: @viva_based she lo...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>!!!!!!!!!!!!! RT @ShenikaRoberts: The shit you...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Unnamed: 0  count  hate_speech  offensive_language  neither  class  \\\n",
       "0           0      3            0                   0        3      2   \n",
       "1           1      3            0                   3        0      1   \n",
       "2           2      3            0                   3        0      1   \n",
       "3           3      3            0                   2        1      1   \n",
       "4           4      6            0                   6        0      1   \n",
       "\n",
       "                                               tweet  \n",
       "0  !!! RT @mayasolovely: As a woman you shouldn't...  \n",
       "1  !!!!! RT @mleew17: boy dats cold...tyga dwn ba...  \n",
       "2  !!!!!!! RT @UrKindOfBrand Dawg!!!! RT @80sbaby...  \n",
       "3  !!!!!!!!! RT @C_G_Anderson: @viva_based she lo...  \n",
       "4  !!!!!!!!!!!!! RT @ShenikaRoberts: The shit you...  "
      ]
     },
     "execution_count": 80,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 24783 entries, 0 to 24782\n",
      "Data columns (total 7 columns):\n",
      "Unnamed: 0            24783 non-null int64\n",
      "count                 24783 non-null int64\n",
      "hate_speech           24783 non-null int64\n",
      "offensive_language    24783 non-null int64\n",
      "neither               24783 non-null int64\n",
      "class                 24783 non-null int64\n",
      "tweet                 24783 non-null object\n",
      "dtypes: int64(6), object(1)\n",
      "memory usage: 1.3+ MB\n"
     ]
    }
   ],
   "source": [
    "df.info()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    19790\n",
       "1     3419\n",
       "2     1251\n",
       "3      287\n",
       "4       21\n",
       "5        7\n",
       "6        5\n",
       "7        3\n",
       "Name: hate_speech, dtype: int64"
      ]
     },
     "execution_count": 82,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.hate_speech.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = df.reset_index(drop=True)\n",
    "REPLACE_BY_SPACE_RE = re.compile('[/(){}\\[\\]\\|@,;]')\n",
    "BAD_SYMBOLS_RE = re.compile('[^0-9a-z #+_]')\n",
    "STOPWORDS = set(stopwords.words('english'))\n",
    "\n",
    "def clean_text(text):\n",
    "    \"\"\"\n",
    "        text: a string\n",
    "        \n",
    "        return: modified initial string\n",
    "    \"\"\"\n",
    "    text = text.lower() # lowercase text\n",
    "    text = REPLACE_BY_SPACE_RE.sub(' ', text) # replace REPLACE_BY_SPACE_RE symbols by space in text. substitute the matched string in REPLACE_BY_SPACE_RE with space.\n",
    "    text = BAD_SYMBOLS_RE.sub('', text) # remove symbols which are in BAD_SYMBOLS_RE from text. substitute the matched string in BAD_SYMBOLS_RE with nothing. \n",
    "    text = text.replace('x', '')\n",
    "#    text = re.sub(r'\\W+', '', text)\n",
    "    text = ' '.join(word for word in text.split() if word not in STOPWORDS) # remove stopwors from text\n",
    "    return text\n",
    "df['tweet'] = df['tweet'].apply(clean_text)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {},
   "outputs": [],
   "source": [
    "df['tweet'] = df['tweet'].str.replace('\\d+', '')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Found 36007 unique tokens.\n"
     ]
    }
   ],
   "source": [
    "# The maximum number of words to be used. (most frequent)\n",
    "MAX_NB_WORDS = 50000\n",
    "# Max number of words in each tweet.\n",
    "MAX_SEQUENCE_LENGTH = 10\n",
    "# This is fixed.\n",
    "EMBEDDING_DIM = 100\n",
    "\n",
    "tokenizer = Tokenizer(num_words=MAX_NB_WORDS, filters='!\"#$%&()*+,-./:;<=>?@[\\]^_`{|}~', lower=True)\n",
    "tokenizer.fit_on_texts(df['tweet'].values)\n",
    "word_index = tokenizer.word_index\n",
    "print('Found %s unique tokens.' % len(word_index))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Shape of data tensor: (24783, 10)\n"
     ]
    }
   ],
   "source": [
    "X = tokenizer.texts_to_sequences(df['tweet'].values)\n",
    "X = pad_sequences(X, maxlen=MAX_SEQUENCE_LENGTH)\n",
    "print('Shape of data tensor:', X.shape)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Shape of label tensor: (24783, 3)\n"
     ]
    }
   ],
   "source": [
    "Y = pd.get_dummies(df['class']).values\n",
    "print('Shape of label tensor:', Y.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(19826, 10) (19826, 3)\n",
      "(4957, 10) (4957, 3)\n"
     ]
    }
   ],
   "source": [
    "X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size = 0.20, random_state = 42)\n",
    "print(X_train.shape,Y_train.shape)\n",
    "print(X_test.shape,Y_test.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "embedding_5 (Embedding)      (None, 10, 100)           5000000   \n",
      "_________________________________________________________________\n",
      "bidirectional_7 (Bidirection (None, 10, 20)            8880      \n",
      "_________________________________________________________________\n",
      "bidirectional_8 (Bidirection (None, 20)                2480      \n",
      "_________________________________________________________________\n",
      "dense_4 (Dense)              (None, 3)                 63        \n",
      "=================================================================\n",
      "Total params: 5,011,423\n",
      "Trainable params: 5,011,423\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n"
     ]
    }
   ],
   "source": [
    "model = Sequential()\n",
    "model.add(Embedding(MAX_NB_WORDS, EMBEDDING_DIM, input_length=X.shape[1]))\n",
    "model.add(Bidirectional(LSTM(10, return_sequences=True),\n",
    "                        input_shape=(5, 10)))\n",
    "model.add(Bidirectional(LSTM(10)))\n",
    "model.add(Dense(3, activation='softmax'))\n",
    "model.compile(loss='categorical_crossentropy', optimizer='rmsprop', metrics=['accuracy'])\n",
    "print(model.summary())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train on 17843 samples, validate on 1983 samples\n",
      "Epoch 1/5\n",
      "17843/17843 [==============================] - 26s 1ms/step - loss: 0.4452 - acc: 0.8434 - val_loss: 0.3141 - val_acc: 0.8961\n",
      "Epoch 2/5\n",
      "17843/17843 [==============================] - 18s 1ms/step - loss: 0.2701 - acc: 0.9051 - val_loss: 0.2813 - val_acc: 0.8991\n",
      "Epoch 3/5\n",
      "17843/17843 [==============================] - 19s 1ms/step - loss: 0.2133 - acc: 0.9270 - val_loss: 0.2839 - val_acc: 0.8991\n",
      "Epoch 4/5\n",
      "17843/17843 [==============================] - 18s 990us/step - loss: 0.1819 - acc: 0.9373 - val_loss: 0.3116 - val_acc: 0.8870\n",
      "Epoch 5/5\n",
      "17843/17843 [==============================] - 19s 1ms/step - loss: 0.1529 - acc: 0.9477 - val_loss: 0.3350 - val_acc: 0.8825\n"
     ]
    }
   ],
   "source": [
    "epochs = 5\n",
    "batch_size = 64\n",
    "\n",
    "history = model.fit(X_train, Y_train, epochs=epochs, batch_size=batch_size,validation_split=0.1,callbacks=[EarlyStopping(monitor='val_loss', patience=3, min_delta=0.0001)])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "4957/4957 [==============================] - 1s 155us/step\n",
      "Test set\n",
      "  Loss: 0.368\n",
      "  Accuracy: 0.871\n"
     ]
    }
   ],
   "source": [
    "accr = model.evaluate(X_test,Y_test)\n",
    "print('Test set\\n  Loss: {:0.3f}\\n  Accuracy: {:0.3f}'.format(accr[0],accr[1]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.title('Loss')\n",
    "plt.plot(history.history['loss'], label='train')\n",
    "plt.plot(history.history['val_loss'], label='test')\n",
    "plt.legend()\n",
    "plt.show();\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.title('Accuracy')\n",
    "plt.plot(history.history['acc'], label='train')\n",
    "plt.plot(history.history['val_acc'], label='test')\n",
    "plt.legend()\n",
    "plt.show();"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "metadata": {},
   "outputs": [],
   "source": [
    "rng = np.random.RandomState(74)\n",
    "transformation = rng.normal(size=(10, 2))\n",
    "X = np.dot(X_test, transformation)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x7f91f3b02c50>"
      ]
     },
     "execution_count": 99,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "Text(0.5, 0, 'Feature 0')"
      ]
     },
     "execution_count": 99,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Feature 1')"
      ]
     },
     "execution_count": 99,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(X[:, 0], X[:, 1])\n",
    "plt.xlabel(\"Feature 0\")\n",
    "plt.ylabel(\"Feature 1\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x7f91f0507630>"
      ]
     },
     "execution_count": 110,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "Text(0.5, 0, 'Feature 0')"
      ]
     },
     "execution_count": 110,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Feature 1')"
      ]
     },
     "execution_count": 110,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "scaler = StandardScaler()\n",
    "X_scaled = scaler.fit_transform(X)\n",
    "dbscan = DBSCAN(eps=0.335, min_samples = 2)\n",
    "clusters = dbscan.fit_predict(X_scaled)# plot the cluster assignments\n",
    "plt.scatter(X[:, 0], X[:, 1], c=clusters, cmap=\"plasma\")\n",
    "plt.xlabel(\"Feature 0\")\n",
    "plt.ylabel(\"Feature 1\")\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "new_tweet = ['As a woman you shouldnt complain about cleaning up your house. &amp']\n",
    "seq = tokenizer.texts_to_sequences(new_tweet)\n",
    "padded = pad_sequences(seq, maxlen=MAX_SEQUENCE_LENGTH)\n",
    "pred = model.predict(padded)\n",
    "labels = ['Hate_speech', 'Offensive_language', 'None']\n",
    "print(pred,labels[np.argmax(pred)])\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
